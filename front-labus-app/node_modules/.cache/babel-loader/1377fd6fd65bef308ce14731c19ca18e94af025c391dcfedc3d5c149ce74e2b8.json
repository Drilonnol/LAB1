{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\front-labus-app\\\\src\\\\components\\\\Mjkete\\\\createTakimiS.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSpitaletList } from \"../../actions/SpitaliAction\";\nimport { getRepartis } from \"../../actions/RepartiActions\";\nimport { getAllQytetet } from \"../../actions/QyteteAction\";\nimport { createTakimi } from \"../../actions/TakimetActions\";\nimport { getMjektets } from \"../../actions/MjekteAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTakimiS() {\n  _s();\n  const dispatch = useDispatch();\n  const userId = localStorage.getItem('userId');\n  const pacinetlist = useSelector(state => state.mjeketReducerContetnt.mjekets);\n  const qytetilist = useSelector(state => state.qytetiReducerContent.qytetets);\n  const employeeList = useSelector(state => state.spitaliReducerContent.spitalis);\n  const repartilist = useSelector(state => state.repartiReducerContent.reparts);\n  const errors = useSelector(state => state.errorReducerContent);\n  const [employeeData, setEmployeeData] = useState({\n    qytetiId: \"\",\n    spitaliId: \"\",\n    repartiId: \"\",\n    mjekuId: \"\",\n    description: \"\",\n    acceptanceCriteria: \"\",\n    status: \"INPUT QUEUE\",\n    priority: 0\n  });\n  useEffect(() => {\n    dispatch(getAllQytetet());\n  }, [dispatch]);\n  useEffect(() => {\n    if (employeeData.qytetiId) {\n      dispatch(getSpitaletList(employeeData.qytetiId));\n    }\n  }, [dispatch, employeeData.qytetiId]);\n  useEffect(() => {\n    if (employeeData.qytetiId && employeeData.spitaliId) {\n      dispatch(getRepartis(employeeData.qytetiId, employeeData.spitaliId));\n    }\n  }, [dispatch, employeeData.qytetiId, employeeData.spitaliId]);\n  useEffect(() => {\n    if (employeeData.qytetiId && employeeData.spitaliId && employeeData.repartiId) {\n      dispatch(getMjektets(employeeData.qytetiId, employeeData.spitaliId, employeeData.repartiId));\n    }\n  }, [dispatch, employeeData.qytetiId, employeeData.spitaliId, employeeData.repartiId]);\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEmployeeData(prevEmployeeData => ({\n      ...prevEmployeeData,\n      [name]: value\n    }));\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n    const newTakimi = {\n      repartiId: employeeData.repartiId,\n      mjekuId: employeeData.mjekuId,\n      description: employeeData.description,\n      acceptanceCriteria: employeeData.acceptanceCriteria,\n      status: employeeData.status,\n      priority: employeeData.priority\n    };\n    dispatch(createTakimi(employeeData.repartiId, employeeData.mjekuId, employeeData.userId, newTakimi));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-10 m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Regjistro Takimin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"qytetiId\",\n          value: employeeData.qytetiId,\n          onChange: onChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), qytetilist.map(qyteti => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: qyteti.id,\n            children: qyteti.emri\n          }, qyteti.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"spitaliId\",\n          value: employeeData.spitaliId,\n          onChange: onChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select hospital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), employeeList.map(spitali => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: spitali.id,\n            children: spitali.emri\n          }, spitali.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"repartiId\",\n          value: employeeData.repartiId,\n          onChange: onChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), repartilist.map(reparti => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: reparti.id,\n            children: reparti.name\n          }, reparti.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"mjekuId\",\n          value: employeeData.mjekuId,\n          onChange: onChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select mjekun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), pacinetlist.map(mjeku => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: mjeku.id,\n            children: mjeku.name\n          }, mjeku.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${errors.description ? \"is-invalid\" : \"\"}`,\n            placeholder: \"Task description\",\n            name: \"description\",\n            value: employeeData.description,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"invalid-feedback\",\n            children: errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Acceptance Criteria:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `form-control ${errors.acceptanceCriteria ? \"is-invalid\" : \"\"}`,\n            placeholder: \"Task acceptance Criteria\",\n            name: \"acceptanceCriteria\",\n            value: employeeData.acceptanceCriteria,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), errors.acceptanceCriteria && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"invalid-feedback\",\n            children: errors.acceptanceCriteria\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `form-control ${errors.priority ? \"is-invalid\" : \"\"}`,\n            name: \"priority\",\n            value: employeeData.priority,\n            onChange: onChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1,\n              children: \"HIGH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 2,\n              children: \"MEDIUM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 3,\n              children: \"LOW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), errors.priority && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"invalid-feedback\",\n            children: errors.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-8\",\n          children: \"Create Takimi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateTakimiS, \"yDADVFIpH8O6mqGQ1rAE7ILPobE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = CreateTakimiS;\nexport default CreateTakimiS;\n\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSpitaletList } from \"../../actions/SpitaliAction\";\r\nimport { getRepartis } from \"../../actions/RepartiActions\";\r\nimport { getAllQytetet } from \"../../actions/QyteteAction\";\r\n\r\nimport { getMjektets } from \"../../actions/MjekteAction\";\r\nimport { createTakimi } from \"../../actions/TakimetActions\";\r\n\r\nfunction CreateTakimiS() {\r\n  const dispatch = useDispatch();\r\n  const pacinetlist = useSelector((state) => state.mjeketReducerContetnt.mjekets);\r\n  const qytetilist = useSelector((state) => state.qytetiReducerContent.qytetets);\r\n  const employeeList = useSelector((state) => state.spitaliReducerContent.spitalis);\r\n  const repartilist = useSelector((state) => state.repartiReducerContent.reparts);\r\n  const errors = useSelector((state) => state.errorReducerContent);\r\n\r\n  const [spital, setSpital] = useState({\r\n    id: \"\"\r\n  });\r\n  const [employeeData, setEmployeeData] = useState({\r\n    qytetiId: \"\",\r\n    spitaliId: \"\",\r\n    repartiId: \"\",\r\n    mjekuId: \"\",\r\n    description: \"\",\r\n    acceptanceCriteria: \"\",\r\n    status: \"\",\r\n    priority: \"\"\r\n  });\r\n  \r\n  useEffect(() => {\r\n    dispatch(getAllQytetet());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if(employeeData.qytetiId){\r\n      dispatch(getSpitaletList(employeeData.qytetiId));\r\n    }\r\n  }, [dispatch,employeeData.qytetiId]);\r\n\r\n  useEffect(() => {\r\n    if (employeeData.qytetiId && employeeData.spitaliId) {\r\n      dispatch(getRepartis(employeeData.qytetiId, employeeData.spitaliId));\r\n    }\r\n  }, [dispatch, employeeData.qytetiId, employeeData.spitaliId]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(employeeData.qytetiId && employeeData.spitaliId && employeeData.repartiId){\r\n    dispatch(getMjektets(employeeData.qytetiId, employeeData.spitaliId, employeeData.repartiId, employeeData));\r\n    }\r\n}, [dispatch,employeeData.qytetiId, employeeData.spitaliId, employeeData.repartiId, employeeData]);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"qytetiId\") {\r\n      setSpital({ id: \"\" }); // Update the hospital state if city changes\r\n    }\r\n    setEmployeeData((prevEmployeeData) => ({\r\n      ...prevEmployeeData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newEmployee = {\r\n      repartiId: employeeData.repartiId,\r\n      mjekuId:employeeData.mjekuId,\r\n      description:employeeData.description,\r\n      acceptanceCriteria:employeeData.acceptanceCriteria,\r\n      status:employeeData.status,\r\n      priority : employeeData.priority,\r\n     \r\n    }\r\n    dispatch(createTakimi(employeeData.repartiId,employeeData.mjekuId, employeeData));\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-10 m-auto\">\r\n        <h1 className=\"text-center\">Regjistro Takimin</h1>\r\n        <hr />\r\n        <form onSubmit={onSubmit}>\r\n          <select name=\"qytetiId\"\r\n            value={employeeData.qytetiId}\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select city</option>\r\n            {qytetilist.map((qyteti) => (\r\n              <option key={qyteti.id} value={qyteti.id}>\r\n                {qyteti.emri}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n\r\n          <select name=\"spitaliId\"\r\n            value={employeeData.spitaliId}\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select hospital</option>\r\n            {employeeList.map((spitali) => (\r\n              <option key={spitali.id} value={spitali.id}>\r\n                {spitali.emri}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n\r\n          <select name=\"repartiId\"\r\n            value={employeeData.repartiId}\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select department</option>\r\n            {repartilist.map((reparti) => (\r\n              <option key={reparti.id} value={reparti.id}>\r\n                {reparti.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n          <select name=\"mjekuId\"\r\n            value={employeeData.mjekuId}\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select mjekun</option>\r\n            {pacinetlist.map((mjeku) => (\r\n              <option key={mjeku.id} value={mjeku.id}>\r\n                {mjeku.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <input\r\n              type=\"text\"\r\n              className={`form-control ${errors.description ? \"is-invalid\" : \"\"} `}\r\n              placeholder=\"Task description\"\r\n              name=\"description\"\r\n              value={employeeData.description}\r\n              onChange={onChange}\r\n            />\r\n            {errors.description && (<p className=\"invalid-feedback\">{errors.description}</p>)}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Acceptance Criteria:</label>\r\n            <input\r\n              type=\"text\"\r\n                className={`form-control ${errors.acceptanceCriteria ? \"is-invalid\" : \"\" }`}\r\n              placeholder=\"Task acceptance Criteria\"\r\n              name=\"acceptanceCriteria\"\r\n              value={employeeData.acceptanceCriteria}\r\n              onChange={onChange}\r\n            />\r\n             {errors.acceptanceCriteria && (<p className=\"invalid-feedback\">{errors.acceptanceCriteria}</p>)}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Priority:</label>\r\n            <select\r\n              className={`form-control ${errors.priority ? \"is-invalid\" : \"\" }`}\r\n              name=\"priority\"\r\n              value={employeeData.priority}\r\n              onChange={onChange}\r\n            >\r\n            <option value=\"\">Select Priority</option>\r\n              <option value={1}>HIGH</option>\r\n              <option value={2}>MEDIUM</option>\r\n              <option value={3}>LOW</option>\r\n            </select>\r\n            {errors.priority && (<p className=\"invalid-feedback\">{errors.priority}</p>)}\r\n          </div>\r\n<br/>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary mt-8\">Create Alergjia</button>\r\n          \r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTakimiS;*/\nvar _c;\n$RefreshReg$(_c, \"CreateTakimiS\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getSpitaletList","getRepartis","getAllQytetet","createTakimi","getMjektets","jsxDEV","_jsxDEV","CreateTakimiS","_s","dispatch","userId","localStorage","getItem","pacinetlist","state","mjeketReducerContetnt","mjekets","qytetilist","qytetiReducerContent","qytetets","employeeList","spitaliReducerContent","spitalis","repartilist","repartiReducerContent","reparts","errors","errorReducerContent","employeeData","setEmployeeData","qytetiId","spitaliId","repartiId","mjekuId","description","acceptanceCriteria","status","priority","onChange","event","name","value","target","prevEmployeeData","onSubmit","preventDefault","newTakimi","className","children","fileName","_jsxFileName","lineNumber","columnNumber","required","map","qyteti","id","emri","spitali","reparti","mjeku","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/front-labus-app/src/components/Mjkete/createTakimiS.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSpitaletList } from \"../../actions/SpitaliAction\";\r\nimport { getRepartis } from \"../../actions/RepartiActions\";\r\nimport { getAllQytetet } from \"../../actions/QyteteAction\";\r\nimport { createTakimi } from \"../../actions/TakimetActions\";\r\nimport { getMjektets } from \"../../actions/MjekteAction\";\r\n\r\nfunction CreateTakimiS() {\r\n  const dispatch = useDispatch();\r\n  const userId= localStorage.getItem('userId');\r\n  const pacinetlist = useSelector((state) => state.mjeketReducerContetnt.mjekets);\r\n  const qytetilist = useSelector((state) => state.qytetiReducerContent.qytetets);\r\n  const employeeList = useSelector((state) => state.spitaliReducerContent.spitalis);\r\n  const repartilist = useSelector((state) => state.repartiReducerContent.reparts);\r\n  const errors = useSelector((state) => state.errorReducerContent);\r\n\r\n  const [employeeData, setEmployeeData] = useState({\r\n    qytetiId: \"\",\r\n    spitaliId: \"\",\r\n    repartiId: \"\",\r\n    mjekuId: \"\",\r\n    description:\"\",\r\n    acceptanceCriteria:\"\",\r\n    status:\"INPUT QUEUE\",\r\n    priority : 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllQytetet());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (employeeData.qytetiId) {\r\n      dispatch(getSpitaletList(employeeData.qytetiId));\r\n    }\r\n  }, [dispatch, employeeData.qytetiId]);\r\n\r\n  useEffect(() => {\r\n    if (employeeData.qytetiId && employeeData.spitaliId) {\r\n      dispatch(getRepartis(employeeData.qytetiId, employeeData.spitaliId));\r\n    }\r\n  }, [dispatch, employeeData.qytetiId, employeeData.spitaliId]);\r\n\r\n  useEffect(() => {\r\n    if (employeeData.qytetiId && employeeData.spitaliId && employeeData.repartiId) {\r\n      dispatch(getMjektets(employeeData.qytetiId, employeeData.spitaliId, employeeData.repartiId));\r\n    }\r\n  }, [dispatch, employeeData.qytetiId, employeeData.spitaliId, employeeData.repartiId]);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setEmployeeData((prevEmployeeData) => ({\r\n      ...prevEmployeeData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newTakimi = {\r\n      repartiId: employeeData.repartiId,\r\n      mjekuId: employeeData.mjekuId,\r\n      description: employeeData.description,\r\n      acceptanceCriteria: employeeData.acceptanceCriteria,\r\n      status: employeeData.status,\r\n      priority: employeeData.priority,\r\n    };\r\n    dispatch(createTakimi(employeeData.repartiId, employeeData.mjekuId,employeeData.userId, newTakimi));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-10 m-auto\">\r\n        <h1 className=\"text-center\">Regjistro Takimin</h1>\r\n        <hr />\r\n        <form onSubmit={onSubmit}>\r\n          <select\r\n            name=\"qytetiId\"\r\n            value={employeeData.qytetiId}\r\n            onChange={onChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select city</option>\r\n            {qytetilist.map((qyteti) => (\r\n              <option key={qyteti.id} value={qyteti.id}>\r\n                {qyteti.emri}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n          <select\r\n            name=\"spitaliId\"\r\n            value={employeeData.spitaliId}\r\n            onChange={onChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select hospital</option>\r\n            {employeeList.map((spitali) => (\r\n              <option key={spitali.id} value={spitali.id}>\r\n                {spitali.emri}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n          <select\r\n            name=\"repartiId\"\r\n            value={employeeData.repartiId}\r\n            onChange={onChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select department</option>\r\n            {repartilist.map((reparti) => (\r\n              <option key={reparti.id} value={reparti.id}>\r\n                {reparti.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n          <select\r\n            name=\"mjekuId\"\r\n            value={employeeData.mjekuId}\r\n            onChange={onChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select mjekun</option>\r\n            {pacinetlist.map((mjeku) => (\r\n              <option key={mjeku.id} value={mjeku.id}>\r\n                {mjeku.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <input\r\n              type=\"text\"\r\n              className={`form-control ${errors.description ? \"is-invalid\" : \"\"}`}\r\n              placeholder=\"Task description\"\r\n              name=\"description\"\r\n              value={employeeData.description}\r\n              onChange={onChange}\r\n            />\r\n            {errors.description && (<p className=\"invalid-feedback\">{errors.description}</p>)}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Acceptance Criteria:</label>\r\n            <input\r\n              type=\"text\"\r\n              className={`form-control ${errors.acceptanceCriteria ? \"is-invalid\" : \"\"}`}\r\n              placeholder=\"Task acceptance Criteria\"\r\n              name=\"acceptanceCriteria\"\r\n              value={employeeData.acceptanceCriteria}\r\n              onChange={onChange}\r\n            />\r\n            {errors.acceptanceCriteria && (<p className=\"invalid-feedback\">{errors.acceptanceCriteria}</p>)}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Priority:</label>\r\n            <select\r\n              className={`form-control ${errors.priority ? \"is-invalid\" : \"\"}`}\r\n              name=\"priority\"\r\n              value={employeeData.priority}\r\n              onChange={onChange}\r\n            >\r\n              <option value=\"\">Select Priority</option>\r\n              <option value={1}>HIGH</option>\r\n              <option value={2}>MEDIUM</option>\r\n              <option value={3}>LOW</option>\r\n            </select>\r\n            {errors.priority && (<p className=\"invalid-feedback\">{errors.priority}</p>)}\r\n          </div>\r\n          <br />\r\n          <button type=\"submit\" className=\"btn btn-primary mt-8\">Create Takimi</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTakimiS;\r\n\r\n\r\n/*import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSpitaletList } from \"../../actions/SpitaliAction\";\r\nimport { getRepartis } from \"../../actions/RepartiActions\";\r\nimport { getAllQytetet } from \"../../actions/QyteteAction\";\r\n\r\nimport { getMjektets } from \"../../actions/MjekteAction\";\r\nimport { createTakimi } from \"../../actions/TakimetActions\";\r\n\r\nfunction CreateTakimiS() {\r\n  const dispatch = useDispatch();\r\n  const pacinetlist = useSelector((state) => state.mjeketReducerContetnt.mjekets);\r\n  const qytetilist = useSelector((state) => state.qytetiReducerContent.qytetets);\r\n  const employeeList = useSelector((state) => state.spitaliReducerContent.spitalis);\r\n  const repartilist = useSelector((state) => state.repartiReducerContent.reparts);\r\n  const errors = useSelector((state) => state.errorReducerContent);\r\n\r\n  const [spital, setSpital] = useState({\r\n    id: \"\"\r\n  });\r\n  const [employeeData, setEmployeeData] = useState({\r\n    qytetiId: \"\",\r\n    spitaliId: \"\",\r\n    repartiId: \"\",\r\n    mjekuId: \"\",\r\n    description: \"\",\r\n    acceptanceCriteria: \"\",\r\n    status: \"\",\r\n    priority: \"\"\r\n  });\r\n  \r\n  useEffect(() => {\r\n    dispatch(getAllQytetet());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if(employeeData.qytetiId){\r\n      dispatch(getSpitaletList(employeeData.qytetiId));\r\n    }\r\n  }, [dispatch,employeeData.qytetiId]);\r\n\r\n  useEffect(() => {\r\n    if (employeeData.qytetiId && employeeData.spitaliId) {\r\n      dispatch(getRepartis(employeeData.qytetiId, employeeData.spitaliId));\r\n    }\r\n  }, [dispatch, employeeData.qytetiId, employeeData.spitaliId]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(employeeData.qytetiId && employeeData.spitaliId && employeeData.repartiId){\r\n    dispatch(getMjektets(employeeData.qytetiId, employeeData.spitaliId, employeeData.repartiId, employeeData));\r\n    }\r\n}, [dispatch,employeeData.qytetiId, employeeData.spitaliId, employeeData.repartiId, employeeData]);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"qytetiId\") {\r\n      setSpital({ id: \"\" }); // Update the hospital state if city changes\r\n    }\r\n    setEmployeeData((prevEmployeeData) => ({\r\n      ...prevEmployeeData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newEmployee = {\r\n      repartiId: employeeData.repartiId,\r\n      mjekuId:employeeData.mjekuId,\r\n      description:employeeData.description,\r\n      acceptanceCriteria:employeeData.acceptanceCriteria,\r\n      status:employeeData.status,\r\n      priority : employeeData.priority,\r\n     \r\n    }\r\n    dispatch(createTakimi(employeeData.repartiId,employeeData.mjekuId, employeeData));\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-10 m-auto\">\r\n        <h1 className=\"text-center\">Regjistro Takimin</h1>\r\n        <hr />\r\n        <form onSubmit={onSubmit}>\r\n          <select name=\"qytetiId\"\r\n            value={employeeData.qytetiId}\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select city</option>\r\n            {qytetilist.map((qyteti) => (\r\n              <option key={qyteti.id} value={qyteti.id}>\r\n                {qyteti.emri}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n\r\n          <select name=\"spitaliId\"\r\n            value={employeeData.spitaliId}\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select hospital</option>\r\n            {employeeList.map((spitali) => (\r\n              <option key={spitali.id} value={spitali.id}>\r\n                {spitali.emri}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n\r\n          <select name=\"repartiId\"\r\n            value={employeeData.repartiId}\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select department</option>\r\n            {repartilist.map((reparti) => (\r\n              <option key={reparti.id} value={reparti.id}>\r\n                {reparti.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <hr />\r\n          <select name=\"mjekuId\"\r\n            value={employeeData.mjekuId}\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select mjekun</option>\r\n            {pacinetlist.map((mjeku) => (\r\n              <option key={mjeku.id} value={mjeku.id}>\r\n                {mjeku.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div className=\"form-group\">\r\n            <label>Description:</label>\r\n            <input\r\n              type=\"text\"\r\n              className={`form-control ${errors.description ? \"is-invalid\" : \"\"} `}\r\n              placeholder=\"Task description\"\r\n              name=\"description\"\r\n              value={employeeData.description}\r\n              onChange={onChange}\r\n            />\r\n            {errors.description && (<p className=\"invalid-feedback\">{errors.description}</p>)}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Acceptance Criteria:</label>\r\n            <input\r\n              type=\"text\"\r\n                className={`form-control ${errors.acceptanceCriteria ? \"is-invalid\" : \"\" }`}\r\n              placeholder=\"Task acceptance Criteria\"\r\n              name=\"acceptanceCriteria\"\r\n              value={employeeData.acceptanceCriteria}\r\n              onChange={onChange}\r\n            />\r\n             {errors.acceptanceCriteria && (<p className=\"invalid-feedback\">{errors.acceptanceCriteria}</p>)}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Priority:</label>\r\n            <select\r\n              className={`form-control ${errors.priority ? \"is-invalid\" : \"\" }`}\r\n              name=\"priority\"\r\n              value={employeeData.priority}\r\n              onChange={onChange}\r\n            >\r\n            <option value=\"\">Select Priority</option>\r\n              <option value={1}>HIGH</option>\r\n              <option value={2}>MEDIUM</option>\r\n              <option value={3}>LOW</option>\r\n            </select>\r\n            {errors.priority && (<p className=\"invalid-feedback\">{errors.priority}</p>)}\r\n          </div>\r\n<br/>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary mt-8\">Create Alergjia</button>\r\n          \r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTakimiS;*/"],"mappings":"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UAAQ;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACN9C,OAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN9C,OAAA;UAAQuD,IAAI,EAAC,QAAQ;UAACd,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5C,EAAA,CAzKQD,aAAa;EAAA,QACHT,WAAW,EAERC,WAAW,EACZA,WAAW,EACTA,WAAW,EACZA,WAAW,EAChBA,WAAW;AAAA;AAAAgE,EAAA,GAPnBxD,aAAa;AA2KtB,eAAeA,aAAa;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzLA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
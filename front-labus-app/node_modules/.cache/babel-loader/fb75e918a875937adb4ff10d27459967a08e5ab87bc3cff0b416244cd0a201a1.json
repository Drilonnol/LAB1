{"ast":null,"code":"import { GET_TAKIMET, GET_TAKIMETS, DELETE_TAKIMET, CREATE_TAKIMET } from \"../actions/type\";\n//definimi i inialState\nconst inialState = {\n  takims: [],\n  takim: {}\n};\nexport default function takimReducer(state = inialState, action) {\n  switch (action.type) {\n    case GET_TAKIMETS:\n      return {\n        ...state,\n        //copy gjendjen dhe endryshon nje pjes\n        takims: action.payload\n      };\n    case CREATE_TAKIMET:\n      return {\n        ...state,\n        takim: action.payload\n      };\n    case GET_TAKIMET:\n      return {\n        ...state,\n        //copy gjendjen dhe endryshon nje pjes\n        takim: action.payload\n      };\n    case DELETE_TAKIMET:\n      return {\n        ...state,\n        takims: state.takims.filter(takim => takim.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_TAKIMET","GET_TAKIMETS","DELETE_TAKIMET","CREATE_TAKIMET","inialState","takims","takim","takimReducer","state","action","type","payload","filter","id"],"sources":["C:/Users/Drilon/Desktop/front-labus-app/src/reducers/TakimetReducers.js"],"sourcesContent":["import { GET_TAKIMET,GET_TAKIMETS,DELETE_TAKIMET,CREATE_TAKIMET} from \"../actions/type\";\r\n//definimi i inialState\r\nconst inialState = {\r\n    takims: [],\r\n    takim: {},\r\n}\r\n\r\nexport default function takimReducer(state= inialState , action){\r\n    switch(action.type){\r\n        case GET_TAKIMETS:\r\n            return{\r\n                ...state,//copy gjendjen dhe endryshon nje pjes\r\n                takims: action.payload\r\n            };\r\n        case CREATE_TAKIMET:\r\n            return{\r\n                ...state,\r\n                takim:action.payload\r\n            };\r\n        case GET_TAKIMET:\r\n            return{\r\n                ...state,//copy gjendjen dhe endryshon nje pjes\r\n                takim: action.payload\r\n            }; \r\n        case DELETE_TAKIMET:\r\n            return{\r\n                ...state,\r\n                takims: state.takims.filter((takim) => takim.id !== action.payload)\r\n            };\r\n        default:\r\n            return state;        \r\n    }\r\n}"],"mappings":"AAAA,SAASA,WAAW,EAACC,YAAY,EAACC,cAAc,EAACC,cAAc,QAAO,iBAAiB;AACvF;AACA,MAAMC,UAAU,GAAG;EACfC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,CAAC;AACZ,CAAC;AAED,eAAe,SAASC,YAAYA,CAACC,KAAK,GAAEJ,UAAU,EAAGK,MAAM,EAAC;EAC5D,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKT,YAAY;MACb,OAAM;QACF,GAAGO,KAAK;QAAC;QACTH,MAAM,EAAEI,MAAM,CAACE;MACnB,CAAC;IACL,KAAKR,cAAc;MACf,OAAM;QACF,GAAGK,KAAK;QACRF,KAAK,EAACG,MAAM,CAACE;MACjB,CAAC;IACL,KAAKX,WAAW;MACZ,OAAM;QACF,GAAGQ,KAAK;QAAC;QACTF,KAAK,EAAEG,MAAM,CAACE;MAClB,CAAC;IACL,KAAKT,cAAc;MACf,OAAM;QACF,GAAGM,KAAK;QACRH,MAAM,EAAEG,KAAK,CAACH,MAAM,CAACO,MAAM,CAAEN,KAAK,IAAKA,KAAK,CAACO,EAAE,KAAKJ,MAAM,CAACE,OAAO;MACtE,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
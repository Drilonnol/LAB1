{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\front-labus-app\\\\src\\\\components\\\\takimibyIDlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTakmiById } from \"../actions/TakimetActions\";\nimport TaskID from \"./Takimet/takimiByID\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TakimiByIdList() {\n  _s();\n  const dispatch = useDispatch();\n  const userId = localStorage.getItem('userId');\n  useEffect(() => {\n    if (userId) {\n      dispatch(getTakmiById(userId));\n    }\n  }, [dispatch, userId]);\n  const taskList = useSelector(state => state.takimReducerContent.takim);\n  let inputQueue = [];\n  let inProgress = [];\n  let done = [];\n  if (Array.isArray(taskList)) {\n    for (const task of taskList) {\n      if (task.status === \"INPUT QUEUE\") {\n        inputQueue.push(task);\n      } else if (task.status === \"DONE\") {\n        done.push(task);\n      } else if (task.status === \"IN PROGRESS\") {\n        inProgress.push(task);\n      }\n    }\n  } else {\n    console.log(\"taskList nuk është një array.\");\n    // Veprimet e nevojshme për të trajtuar rastin kur taskList nuk është një array\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"INPUT QUEUE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: inputQueue.map(task => /*#__PURE__*/_jsxDEV(TaskID, {\n              repartiId: task.employee.reparti.id,\n              mjketId: task.employee.id,\n              userId: userId,\n              task: task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 56\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"IN PROGRESS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: inProgress.map(task => /*#__PURE__*/_jsxDEV(TaskID, {\n              repartiId: task.employee.reparti.id,\n              mjketId: task.employee.id,\n              userId: userId,\n              task: task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 56\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"DONE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: done.map(task => /*#__PURE__*/_jsxDEV(TaskID, {\n              repartiId: task.employee.reparti.id,\n              mjketId: task.employee.id,\n              userId: userId,\n              task: task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 50\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(TakimiByIdList, \"puW7UFEPmdBfIh/3OMuvUBuwZ6Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TakimiByIdList;\nexport default TakimiByIdList;\nvar _c;\n$RefreshReg$(_c, \"TakimiByIdList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getTakmiById","TaskID","Link","jsxDEV","_jsxDEV","TakimiByIdList","_s","dispatch","userId","localStorage","getItem","taskList","state","takimReducerContent","takim","inputQueue","inProgress","done","Array","isArray","task","status","push","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repartiId","employee","reparti","id","mjketId","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/front-labus-app/src/components/takimibyIDlist.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTakmiById } from \"../actions/TakimetActions\";\r\nimport TaskID from \"./Takimet/takimiByID\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction TakimiByIdList() {\r\n    const dispatch = useDispatch();\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            dispatch(getTakmiById(userId));\r\n        }\r\n    }, [dispatch, userId]);\r\n\r\n    const taskList = useSelector((state) => state.takimReducerContent.takim);\r\n\r\n    let inputQueue = [];\r\n    let inProgress = [];\r\n    let done = [];\r\n\r\n    if (Array.isArray(taskList)) {\r\n        for (const task of taskList) {\r\n            if (task.status === \"INPUT QUEUE\") {\r\n                inputQueue.push(task);\r\n            } else if (task.status === \"DONE\") {\r\n                done.push(task);\r\n            } else if (task.status === \"IN PROGRESS\") {\r\n                inProgress.push(task);\r\n            }\r\n        }\r\n    } else {\r\n        console.log(\"taskList nuk është një array.\");\r\n        // Veprimet e nevojshme për të trajtuar rastin kur taskList nuk është një array\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <hr></hr>\r\n            <div className='row'>\r\n                <div className='col-md-4'>\r\n                    <div className='card text-center'>\r\n                        <div className='card-header bg-primary text-white'>\r\n                            <h3>INPUT QUEUE</h3>\r\n                        </div>\r\n                        <div className='card-body'>\r\n                            {inputQueue.map((task) => (<TaskID key={task.id} repartiId={task.employee.reparti.id} mjketId={task.employee.id} userId={userId} task={task} />))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <div className='card text-center'>\r\n                        <div className='card-header bg-primary text-white'>\r\n                            <h3>IN PROGRESS</h3>\r\n                        </div>\r\n                        <div className='card-body'>\r\n                            {inProgress.map((task) => (<TaskID key={task.id} repartiId={task.employee.reparti.id} mjketId={task.employee.id} userId={userId} task={task} />))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <div className='card text-center'>\r\n                        <div className='card-header bg-primary text-white'>\r\n                            <h3>DONE</h3>\r\n                        </div>\r\n                        <div className='card-body'>\r\n                            {done.map((task) => (<TaskID key={task.id} repartiId={task.employee.reparti.id} mjketId={task.employee.id} userId={userId} task={task} />))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TakimiByIdList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
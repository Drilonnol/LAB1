{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drilon\\\\Desktop\\\\front-labus-app\\\\src\\\\components\\\\taskimetlist.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { verifikimi } from '../actions/SingupAction';\nimport Task from './Takimet/takimi';\nimport { Link } from 'react-router-dom';\nimport { getTakimiList } from '../actions/TakimetActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const {\n    repartiId,\n    mjketId\n  } = useParams();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (!token) {\n      setIsAuthenticated(false);\n    } else {\n      dispatch(verifikimi(token)).then(response => {\n        setIsAuthenticated(response.status);\n      });\n    }\n  }, [dispatch]);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  }\n  if (isAuthenticated === false) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Unauthorized. Please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 38\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this);\n  }\n  useEffect(() => {\n    dispatch(getTakimiList(repartiId, mjketId));\n  }, [dispatch, repartiId, mjketId]); // Added dependencies to useEffect\n\n  const taskList = useSelector(state => state.takimReducerContent.takims);\n  let inputQueue = [];\n  let inProgress = [];\n  let done = [];\n  if (Array.isArray(taskList)) {\n    for (const task of taskList) {\n      if (task.status === \"INPUT QUEUE\") {\n        inputQueue.push(task);\n      }\n      if (task.status === \"DONE\") {\n        done.push(task);\n      }\n      if (task.status === \"IN PROGRESS\") {\n        inProgress.push(task);\n      }\n    }\n  } else {\n    console.log(\"taskList nuk është një array.\");\n    // Veprimet e nevojshme për të trajtuar rastin kur taskList nuk është një array\n  }\n  return (\n    /*#__PURE__*/\n    // JSX for your component\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/addTask/${repartiId}/${mjketId}`,\n        className: \"btn btn-danger\",\n        children: \" Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-primary text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"INPUT QUEUE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: inputQueue.map(task => /*#__PURE__*/_jsxDEV(Task, {\n                  repartiId: repartiId,\n                  mjketId: mjketId,\n                  task: task\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-primary text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"IN PROGRESS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: inProgress.map(task => /*#__PURE__*/_jsxDEV(Task, {\n                  repartiId: repartiId,\n                  mjketId: mjketId,\n                  task: task\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-primary text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"DONE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: done.map(task => /*#__PURE__*/_jsxDEV(Task, {\n                  repartiId: repartiId,\n                  mjketId: mjketId,\n                  task: task\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(TaskList, \"OgSme0HvvrwoUQkTJ6riANSEK0I=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useEffect","useParams","useDispatch","useSelector","verifikimi","Task","Link","getTakimiList","jsxDEV","_jsxDEV","TaskList","_s","repartiId","mjketId","isAuthenticated","setIsAuthenticated","useState","dispatch","token","localStorage","getItem","then","response","status","children","fileName","_jsxFileName","lineNumber","columnNumber","to","taskList","state","takimReducerContent","takims","inputQueue","inProgress","done","Array","isArray","task","push","console","log","className","map","id","_c","$RefreshReg$"],"sources":["C:/Users/Drilon/Desktop/front-labus-app/src/components/taskimetlist.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { verifikimi } from '../actions/SingupAction';\r\nimport Task from './Takimet/takimi';\r\nimport { Link } from 'react-router-dom';\r\nimport { getTakimiList } from '../actions/TakimetActions';\r\nfunction TaskList() {\r\n    const { repartiId, mjketId } = useParams();\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      const token = localStorage.getItem('jwtToken');\r\n      if (!token) {\r\n          setIsAuthenticated(false);\r\n      } else {\r\n          dispatch(verifikimi(token)).then(response => {\r\n              setIsAuthenticated(response.status);\r\n          });\r\n      }\r\n  }, [dispatch]);\r\n\r\n  if (isAuthenticated === null) {\r\n      return <p>Loading...</p>;\r\n  }\r\n\r\n  if (isAuthenticated === false) {\r\n      return <p>Unauthorized. Please <Link to=\"/signin\">sign in</Link>.</p>;\r\n  }\r\n    useEffect(() => {\r\n        dispatch(getTakimiList(repartiId, mjketId));\r\n    }, [dispatch, repartiId, mjketId]); // Added dependencies to useEffect\r\n \r\n    const taskList = useSelector((state) => state.takimReducerContent.takims);\r\n    let inputQueue = [];\r\n    let inProgress = [];\r\n    let done = [];\r\n    \r\n    if (Array.isArray(taskList)) {\r\n        for(const task of taskList){\r\n          if (task.status === \"INPUT QUEUE\"){\r\n            inputQueue.push(task)\r\n          }\r\n            if(task.status === \"DONE\"){\r\n                done.push(task)\r\n            }\r\n            if(task.status === \"IN PROGRESS\"){\r\n                inProgress.push(task)\r\n            }\r\n        }\r\n    } else {\r\n        console.log(\"taskList nuk është një array.\");\r\n        // Veprimet e nevojshme për të trajtuar rastin kur taskList nuk është një array\r\n    }\r\n    return (\r\n        // JSX for your component\r\n        <div className='container'>\r\n          <Link to={`/addTask/${repartiId}/${mjketId}`} className='btn btn-danger'> Create Task</Link>\r\n          <hr></hr>\r\n          <div className='row'>\r\n            <div className='col-md-4'>\r\n              <div className='card text-center'>\r\n                 <div className='card-header bg-primary text-white'>\r\n                        <h3>INPUT QUEUE</h3>\r\n                        <div className='card-body'>\r\n  {inputQueue.map((task) =>(<Task key={task.id} repartiId={repartiId} mjketId={mjketId} task={task} />))}\r\n</div>\r\n\r\n    \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='col-md-4'>\r\n              <div className='card text-center'>\r\n                 <div className='card-header bg-primary text-white'>\r\n                        <h3>IN PROGRESS</h3>\r\n                        <div className='card-body'>\r\n{inProgress.map((task) =>(<Task key={task.id} repartiId={repartiId} mjketId={mjketId} task={task} />))}\r\n</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='col-md-4'>\r\n              <div className='card text-center'>\r\n                 <div className='card-header bg-primary text-white'>\r\n                        <h3>DONE</h3>\r\n                        <div className='card-body'>\r\n  {done.map((task) =>(<Task key={task.id} repartiId={repartiId} mjketId={mjketId} task={task} />))}\r\n</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}export default TaskList\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
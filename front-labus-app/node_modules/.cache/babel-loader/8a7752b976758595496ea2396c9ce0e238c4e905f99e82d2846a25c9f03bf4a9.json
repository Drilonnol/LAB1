{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drilon\\\\Desktop\\\\front-labus-app\\\\src\\\\components\\\\taskimetlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react'; // Removed redundant useState import\nimport { useParams, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { verifikimi } from '../actions/SingupAction';\nimport Task from './Takimet/takimi';\nimport { getTakimiList } from '../actions/TakimetActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const {\n    repartiId,\n    mjketId\n  } = useParams();\n  const [isAuthenticated, setIsAuthenticated] = React.useState(null); // Using React.useState instead\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (!token) {\n      setIsAuthenticated(false);\n    } else {\n      dispatch(verifikimi(token)).then(response => {\n        setIsAuthenticated(response.status);\n      });\n    }\n  }, [dispatch]);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  if (isAuthenticated === false) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Unauthorized. Please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 40\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  useEffect(() => {\n    dispatch(getTakimiList(repartiId, mjketId));\n  }, [dispatch, repartiId, mjketId]);\n  const taskList = useSelector(state => state.takimReducerContent.takims);\n  let inputQueue = [];\n  let inProgress = [];\n  let done = [];\n  if (Array.isArray(taskList)) {\n    for (const task of taskList) {\n      if (task.status === \"INPUT QUEUE\") {\n        inputQueue.push(task);\n      }\n      if (task.status === \"DONE\") {\n        done.push(task);\n      }\n      if (task.status === \"IN PROGRESS\") {\n        inProgress.push(task);\n      }\n    }\n  } else {\n    console.log(\"taskList is not an array.\");\n    // Handle the case when taskList is not an array\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/addTask/${repartiId}/${mjketId}`,\n      className: \"btn btn-danger\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"INPUT QUEUE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: inputQueue.map(task => /*#__PURE__*/_jsxDEV(Task, {\n              repartiId: repartiId,\n              mjketId: mjketId,\n              task: task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"IN PROGRESS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: inProgress.map(task => /*#__PURE__*/_jsxDEV(Task, {\n              repartiId: repartiId,\n              mjketId: mjketId,\n              task: task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"DONE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: done.map(task => /*#__PURE__*/_jsxDEV(Task, {\n              repartiId: repartiId,\n              mjketId: mjketId,\n              task: task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"OgSme0HvvrwoUQkTJ6riANSEK0I=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useParams","Link","useDispatch","useSelector","verifikimi","Task","getTakimiList","jsxDEV","_jsxDEV","TaskList","_s","repartiId","mjketId","isAuthenticated","setIsAuthenticated","useState","dispatch","token","localStorage","getItem","then","response","status","children","fileName","_jsxFileName","lineNumber","columnNumber","to","taskList","state","takimReducerContent","takims","inputQueue","inProgress","done","Array","isArray","task","push","console","log","className","map","id","_c","$RefreshReg$"],"sources":["C:/Users/Drilon/Desktop/front-labus-app/src/components/taskimetlist.js"],"sourcesContent":["import React, { useEffect } from 'react'; // Removed redundant useState import\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { verifikimi } from '../actions/SingupAction';\r\nimport Task from './Takimet/takimi';\r\nimport { getTakimiList } from '../actions/TakimetActions';\r\n\r\nfunction TaskList() {\r\n    const { repartiId, mjketId } = useParams();\r\n    const [isAuthenticated, setIsAuthenticated] = React.useState(null); // Using React.useState instead\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        if (!token) {\r\n            setIsAuthenticated(false);\r\n        } else {\r\n            dispatch(verifikimi(token)).then(response => {\r\n                setIsAuthenticated(response.status);\r\n            });\r\n        }\r\n    }, [dispatch]);\r\n\r\n    if (isAuthenticated === null) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    if (isAuthenticated === false) {\r\n        return <p>Unauthorized. Please <Link to=\"/signin\">sign in</Link>.</p>;\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getTakimiList(repartiId, mjketId));\r\n    }, [dispatch, repartiId, mjketId]);\r\n\r\n    const taskList = useSelector((state) => state.takimReducerContent.takims);\r\n    let inputQueue = [];\r\n    let inProgress = [];\r\n    let done = [];\r\n\r\n    if (Array.isArray(taskList)) {\r\n        for (const task of taskList) {\r\n            if (task.status === \"INPUT QUEUE\") {\r\n                inputQueue.push(task);\r\n            }\r\n            if (task.status === \"DONE\") {\r\n                done.push(task);\r\n            }\r\n            if (task.status === \"IN PROGRESS\") {\r\n                inProgress.push(task);\r\n            }\r\n        }\r\n    } else {\r\n        console.log(\"taskList is not an array.\");\r\n        // Handle the case when taskList is not an array\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Link to={`/addTask/${repartiId}/${mjketId}`} className='btn btn-danger'>Create Task</Link>\r\n            <hr></hr>\r\n            <div className='row'>\r\n                <div className='col-md-4'>\r\n                    <div className='card text-center'>\r\n                        <div className='card-header bg-primary text-white'>\r\n                            <h3>INPUT QUEUE</h3>\r\n                        </div>\r\n                        <div className='card-body'>\r\n                            {inputQueue.map((task) => (\r\n                                <Task key={task.id} repartiId={repartiId} mjketId={mjketId} task={task} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <div className='card text-center'>\r\n                        <div className='card-header bg-primary text-white'>\r\n                            <h3>IN PROGRESS</h3>\r\n                        </div>\r\n                        <div className='card-body'>\r\n                            {inProgress.map((task) => (\r\n                                <Task key={task.id} repartiId={repartiId} mjketId={mjketId} task={task} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <div className='card text-center'>\r\n                        <div className='card-header bg-primary text-white'>\r\n                            <h3>DONE</h3>\r\n                        </div>\r\n                        <div className='card-body'>\r\n                            {done.map((task) => (\r\n                                <Task key={task.id} repartiId={repartiId} mjketId={mjketId} task={task} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
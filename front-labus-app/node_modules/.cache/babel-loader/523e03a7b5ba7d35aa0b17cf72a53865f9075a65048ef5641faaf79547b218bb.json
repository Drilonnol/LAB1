{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\front-labus-app\\\\src\\\\components\\\\infermieretList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getInfermiers } from '../actions/InfermieretActions';\nimport Infermier from './Infermieret/infermier';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfermierList() {\n  _s();\n  const {\n    qytetiId,\n    spitaliId,\n    repartiId\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getInfermiers(qytetiId, spitaliId, repartiId));\n  }, [dispatch, qytetiId, spitaliId, repartiId]);\n  const infermierlist = useSelector(state => state.infermieretReducerContent.infermierts);\n  if (!Array.isArray(infermierlist)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/addInfermieret/${qytetiId}/${spitaliId}/${repartiId}`,\n      className: \"btn btn-danger\",\n      children: \"Create Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), infermierlist.map(infermier => /*#__PURE__*/_jsxDEV(Infermier, {\n      infermier: infermier,\n      qytetiId: qytetiId,\n      spitaliId: spitaliId,\n      repartiId: repartiId\n    }, infermier.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(InfermierList, \"k0jxN6dYcIUgTYkxhrRDllkYKp0=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = InfermierList;\nexport default InfermierList;\nvar _c;\n$RefreshReg$(_c, \"InfermierList\");","map":{"version":3,"names":["React","useEffect","useParams","Link","useDispatch","useSelector","getInfermiers","Infermier","jsxDEV","_jsxDEV","InfermierList","_s","qytetiId","spitaliId","repartiId","dispatch","infermierlist","state","infermieretReducerContent","infermierts","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","map","infermier","id","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/front-labus-app/src/components/infermieretList.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getInfermiers } from '../actions/InfermieretActions';\r\nimport Infermier from './Infermieret/infermier';\r\n\r\nfunction InfermierList() {\r\n    const { qytetiId, spitaliId, repartiId } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getInfermiers(qytetiId, spitaliId, repartiId));\r\n    }, [dispatch, qytetiId, spitaliId, repartiId]);\r\n\r\n    const infermierlist = useSelector(state => state.infermieretReducerContent.infermierts);\r\n\r\n    if (!Array.isArray(infermierlist)) {\r\n        return <div>No data available</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Link to={`/addInfermieret/${qytetiId}/${spitaliId}/${repartiId}`} className=\"btn btn-danger\">\r\n                Create Employee\r\n            </Link>\r\n            <hr />\r\n            {infermierlist.map((infermier) => (\r\n                <Infermier\r\n                    key={infermier.id}\r\n                    infermier={infermier}\r\n                    qytetiId={qytetiId}\r\n                    spitaliId={spitaliId}\r\n                    repartiId={repartiId}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfermierList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGZ,SAAS,CAAC,CAAC;EACtD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACT,aAAa,CAACM,QAAQ,EAAEC,SAAS,EAAEC,SAAS,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACC,QAAQ,EAAEH,QAAQ,EAAEC,SAAS,EAAEC,SAAS,CAAC,CAAC;EAE9C,MAAME,aAAa,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,yBAAyB,CAACC,WAAW,CAAC;EAEvF,IAAI,CAACC,KAAK,CAACC,OAAO,CAACL,aAAa,CAAC,EAAE;IAC/B,oBAAOP,OAAA;MAAAa,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvC;EAEA,oBACIjB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACtBb,OAAA,CAACN,IAAI;MAACyB,EAAE,EAAE,mBAAmBhB,QAAQ,IAAIC,SAAS,IAAIC,SAAS,EAAG;MAACa,SAAS,EAAC,gBAAgB;MAAAL,QAAA,EAAC;IAE9F;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPjB,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLV,aAAa,CAACa,GAAG,CAAEC,SAAS,iBACzBrB,OAAA,CAACF,SAAS;MAENuB,SAAS,EAAEA,SAAU;MACrBlB,QAAQ,EAAEA,QAAS;MACnBC,SAAS,EAAEA,SAAU;MACrBC,SAAS,EAAEA;IAAU,GAJhBgB,SAAS,CAACC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKpB,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACf,EAAA,CA/BQD,aAAa;EAAA,QACyBR,SAAS,EACnCE,WAAW,EAMNC,WAAW;AAAA;AAAA2B,EAAA,GAR5BtB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
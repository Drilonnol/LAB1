{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drilon\\\\Desktop\\\\front-labus-app\\\\src\\\\components\\\\mjekteList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react'; // Import useState\nimport { useParams, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Mjekt from './Mjkete/mjket';\nimport { verifikimi } from '../actions/SingupAction';\nimport { getMjektets } from '../actions/MjekteAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MjketList() {\n  _s();\n  const {\n    qytetiId,\n    spitaliId,\n    repartiId\n  } = useParams();\n  const dispatch = useDispatch();\n  const [isAuthenticated, setIsAuthenticated] = useState(null); // Use useState here\n  const mjketlist = useSelector(state => state.mjeketReducerContetnt.mjekets);\n  useEffect(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (!token) {\n      setIsAuthenticated(false);\n    } else {\n      dispatch(verifikimi(token)).then(response => {\n        setIsAuthenticated(response.status);\n      });\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getMjektets(qytetiId, spitaliId, repartiId));\n  }, [dispatch, qytetiId, spitaliId, repartiId]);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  if (isAuthenticated === false) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Unauthorized. Please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 40\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  // if (!Array.isArray(mjketlist) || mjketlist.length === 0) {\n  //   return <div>No data available</div>;\n  //}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/addMjeket/${qytetiId}/${spitaliId}/${repartiId}`,\n      className: \"btn btn-danger\",\n      children: \"Create Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), mjketlist.map(mjeket => /*#__PURE__*/_jsxDEV(Mjekt, {\n      mjeket: mjeket,\n      qytetiId: qytetiId,\n      spitaliId: spitaliId,\n      repartiId: repartiId\n    }, mjeket.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(MjketList, \"7GrjObEdsuNINxfx5BkbZ6BJAYQ=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = MjketList;\nexport default MjketList;\nvar _c;\n$RefreshReg$(_c, \"MjketList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useDispatch","useSelector","Mjekt","verifikimi","getMjektets","jsxDEV","_jsxDEV","MjketList","_s","qytetiId","spitaliId","repartiId","dispatch","isAuthenticated","setIsAuthenticated","mjketlist","state","mjeketReducerContetnt","mjekets","token","localStorage","getItem","then","response","status","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","map","mjeket","id","_c","$RefreshReg$"],"sources":["C:/Users/Drilon/Desktop/front-labus-app/src/components/mjekteList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'; // Import useState\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Mjekt from './Mjkete/mjket';\r\nimport { verifikimi } from '../actions/SingupAction';\r\nimport { getMjektets } from '../actions/MjekteAction';\r\n\r\nfunction MjketList() {\r\n    const { qytetiId, spitaliId, repartiId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null); // Use useState here\r\n    const mjketlist = useSelector((state) => state.mjeketReducerContetnt.mjekets);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        if (!token) {\r\n            setIsAuthenticated(false);\r\n        } else {\r\n            dispatch(verifikimi(token)).then(response => {\r\n                setIsAuthenticated(response.status);\r\n            });\r\n        }\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getMjektets(qytetiId, spitaliId, repartiId));\r\n    }, [dispatch, qytetiId, spitaliId, repartiId]);\r\n\r\n    if (isAuthenticated === null) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    if (isAuthenticated === false) {\r\n        return <p>Unauthorized. Please <Link to=\"/signin\">sign in</Link>.</p>;\r\n    }\r\n\r\n   // if (!Array.isArray(mjketlist) || mjketlist.length === 0) {\r\n     //   return <div>No data available</div>;\r\n    //}\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Link to={`/addMjeket/${qytetiId}/${spitaliId}/${repartiId}`} className=\"btn btn-danger\">\r\n                Create Employee\r\n            </Link>\r\n            <hr />\r\n            {mjketlist.map((mjeket) => (\r\n                <Mjekt\r\n                    key={mjeket.id}\r\n                    mjeket={mjeket}\r\n                    qytetiId={qytetiId}\r\n                    spitaliId={spitaliId}\r\n                    repartiId={repartiId}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MjketList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
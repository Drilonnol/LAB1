{"ast":null,"code":"import axios from \"axios\";\nimport { GET_TAKIMET, GET_TAKIMETS, DELETE_TAKIMET, CREATE_TAKIMET, GET_TAKIMBYID } from \"./type\";\nimport { GET_ERRORS } from \"./type\";\nexport const getTakimiList = (repartiId, mjekeiId) => async dispatch => {\n  try {\n    const response = await axios.get(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/${repartiId}/${mjekeiId}`);\n    dispatch({\n      type: GET_TAKIMETS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const createTakimi = (repartiId, mjekeiId, userId, takimi) => async dispatch => {\n  try {\n    const response = await axios.post(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/create/${repartiId}/${mjekeiId}/${userId}`, takimi);\n    //window.location.href = `/taskList/${dep_id}/${emp_id}`\n    dispatch({\n      type: CREATE_TAKIMET,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getTask = (repartiId, mjekeiId, takimiId) => async dispatch => {\n  try {\n    const response = await axios.get(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/get/${repartiId}/${mjekeiId}/${takimiId}`);\n    dispatch({\n      type: GET_TAKIMET,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const deleteTakimi = (repartiId, mjekeiId, takimiId) => async dispatch => {\n  try {\n    const response = await axios.delete(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/delete/${repartiId}/${mjekeiId}/${takimiId}`);\n    dispatch({\n      type: DELETE_TAKIMET,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\nexport const getTakmiById = userId => async dispatch => {\n  try {\n    const response = await axios.get(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/user-with-meetings/${userId}`);\n    dispatch({\n      type: GET_TAKIMBYID,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\n/*export const getTakimiList = (repartiId, mjekeiId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`http://localhost:8081/api/takimet/${repartiId}/${mjekeiId}`);\r\n        dispatch({\r\n            type: GET_TAKIMETS,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const createTakimi = (repartiId, mjekeiId, takimi) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(`http://192.168.0.22:8081/meaxhimi-spitalit-app/api/takimet/create/${repartiId}/${mjekeiId}`,takimi);\r\n        //window.location.href = `/taskList/${dep_id}/${emp_id}`\r\n        dispatch({\r\n            type: CREATE_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getTask = (repartiId, mjekeiId, takimiId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`http://localhost:8081/api/takimet/get/${repartiId}/${mjekeiId}/${takimiId}`);\r\n        dispatch({\r\n            type: GET_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteTakimi = (repartiId, mjekeiId,takimiId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.delete(`http://localhost:8081/api/takimet/delete/${repartiId}/${mjekeiId}/${takimiId}`);\r\n        dispatch({\r\n            type: DELETE_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};*/","map":{"version":3,"names":["axios","GET_TAKIMET","GET_TAKIMETS","DELETE_TAKIMET","CREATE_TAKIMET","GET_TAKIMBYID","GET_ERRORS","getTakimiList","repartiId","mjekeiId","dispatch","response","get","type","payload","data","error","createTakimi","userId","takimi","post","getTask","takimiId","deleteTakimi","delete","getTakmiById"],"sources":["C:/Users/HP/Desktop/front-labus-app/src/actions/TakimetActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { GET_TAKIMET,GET_TAKIMETS,DELETE_TAKIMET,CREATE_TAKIMET,GET_TAKIMBYID } from \"./type\";\r\nimport { GET_ERRORS } from \"./type\";\r\n\r\nexport const getTakimiList = (repartiId, mjekeiId , ) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/${repartiId}/${mjekeiId}`);\r\n        dispatch({\r\n            type: GET_TAKIMETS,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const createTakimi = (repartiId, mjekeiId, userId ,takimi) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/create/${repartiId}/${mjekeiId}/${userId}`,takimi);\r\n        //window.location.href = `/taskList/${dep_id}/${emp_id}`\r\n        dispatch({\r\n            type: CREATE_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getTask = (repartiId, mjekeiId, takimiId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/get/${repartiId}/${mjekeiId}/${takimiId}`);\r\n        dispatch({\r\n            type: GET_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteTakimi = (repartiId, mjekeiId,takimiId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.delete(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/delete/${repartiId}/${mjekeiId}/${takimiId}`);\r\n        dispatch({\r\n            type: DELETE_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const getTakmiById = (userId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`http://192.168.1.16:8081/meaxhimi-spitalit-app/api/takimet/user-with-meetings/${userId}`);\r\n        dispatch({\r\n            type: GET_TAKIMBYID,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*export const getTakimiList = (repartiId, mjekeiId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`http://localhost:8081/api/takimet/${repartiId}/${mjekeiId}`);\r\n        dispatch({\r\n            type: GET_TAKIMETS,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const createTakimi = (repartiId, mjekeiId, takimi) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.post(`http://192.168.0.22:8081/meaxhimi-spitalit-app/api/takimet/create/${repartiId}/${mjekeiId}`,takimi);\r\n        //window.location.href = `/taskList/${dep_id}/${emp_id}`\r\n        dispatch({\r\n            type: CREATE_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getTask = (repartiId, mjekeiId, takimiId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`http://localhost:8081/api/takimet/get/${repartiId}/${mjekeiId}/${takimiId}`);\r\n        dispatch({\r\n            type: GET_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteTakimi = (repartiId, mjekeiId,takimiId) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.delete(`http://localhost:8081/api/takimet/delete/${repartiId}/${mjekeiId}/${takimiId}`);\r\n        dispatch({\r\n            type: DELETE_TAKIMET,\r\n            payload: response.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}